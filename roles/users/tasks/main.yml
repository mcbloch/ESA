---
- name: Users | User Management
  user:
    name: "{{ item }}"
    state: "{{  all_users[item].state | default('present') }}"
    password: "{{ all_users[item].password | default('')}}"
    shell: "{{ all_users[item].shell | default('/bin/bash') }}"
    update_password: always
  loop: "{{ users }}"

# Playbook now uses 'exclusive'
# This will clobber any missing keys on the target host
- name: Users | Public authorized_keys
  authorized_key:
    exclusive: yes
    user: "{{ item }}"
    key: "{{ lookup('file', 'files/keys/' + item) }}"
  loop: "{{ users }}"
  ignore_errors: true
  tags: [ 'keys' ]

- name: Users | Sudoers
  lineinfile:
    dest: /etc/sudoers
    regexp: "^{{ item }} ALL="
    line: "{{ item }} ALL=(ALL) NOPASSWD:ALL"
    validate: "visudo -cf %s"
  loop: "{{ users }}"
  tags: [ 'sudo' ]

- name: Users | PermitRootLogin without-password
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: "^\\#?PermitRootLogin"
    line: "PermitRootLogin without-password"
  notify: restart sshd
  tags: [ 'sudo', 'root' ]

- name: Users | Install extra packages
  apt:
    name: "{{ all_users[item].apt }}"
    update_cache: yes
  tags: ["packages"]
  loop: "{{ users }}"
  when: all_users[item].apt is defined